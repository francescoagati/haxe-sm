// Generated by Haxe 4.0.5
(function ($global) { "use strict";
function $extend(from, fields) {
	var proto = Object.create(from);
	for (var name in fields) proto[name] = fields[name];
	if( fields.toString !== Object.prototype.toString ) proto.toString = fields.toString;
	return proto;
}
var HxOverrides = function() { };
HxOverrides.__name__ = true;
HxOverrides.iter = function(a) {
	return { cur : 0, arr : a, hasNext : function() {
		return this.cur < this.arr.length;
	}, next : function() {
		return this.arr[this.cur++];
	}};
};
var Machine = function(initial) {
	this.transitions = new haxe_ds_StringMap();
	this.actions = new haxe_ds_StringMap();
	this.currentState = initial;
	this.reset();
};
Machine.__name__ = true;
Machine.prototype = {
	reset: function() {
		this.processingEvent = false;
		this.cancellable = false;
		this.cancelled = false;
		this.pendingEvent = "";
		this.src = "";
		this.dst = "";
		this.evt = "";
	}
	,'export': function() {
		var export_str = "# dot -Tpng myfile.dot >myfile.png\ndigraph g {\nrankdir=\"LR\";\nnode[style=\"rounded\",shape=\"box\"]\nedge[splines=\"curved\"]";
		export_str = "# dot -Tpng myfile.dot >myfile.png\ndigraph g {\nrankdir=\"LR\";\nnode[style=\"rounded\",shape=\"box\"]\nedge[splines=\"curved\"]" + ("\n  " + this.currentState + " [style=\"rounded,filled\",fillcolor=\"gray\"]");
		var k = this.transitions.keys();
		while(k.hasNext()) {
			var k1 = k.next();
			var _this = this.transitions;
			var dst = __map_reserved[k1] != null ? _this.getReserved(k1) : _this.h[k1];
			var a = k1.split("_");
			export_str += a[1] + " -> " + dst + " [label=\"" + a[0] + "\"];\n";
		}
		export_str += "}";
		return export_str;
	}
	,rule: function(event,src,dst) {
		var _this = this.transitions;
		var key = event + "_" + src;
		if(__map_reserved[key] != null) {
			_this.setReserved(key,dst);
		} else {
			_this.h[key] = dst;
		}
	}
};
var Main = function() { };
Main.__name__ = true;
Main.main = function() {
	console.log("src/Main.hx:37:","Hello, world!");
	var machine = new Machine("list");
	var params = { event : "insert", src : "list", dst : "insertData"};
	machine.rule(Std.string(params.event) + "",params.src,params.dst);
	var this1 = machine;
	var params1 = { event : "insert", src : "insertData", dst : "validateInsert"};
	this1.rule(Std.string(params1.event) + "",params1.src,params1.dst);
	var params2 = { event : "insert", src : "validateInsert", dst : "create"};
	this1.rule(Std.string(params2.event) + "",params2.src,params2.dst);
	var params3 = { event : "eValidate", src : "validateInsert", dst : "insertData"};
	this1.rule(Std.string(params3.event) + "",params3.src,params3.dst);
	var params4 = { event : "eError", src : "create", dst : "createError"};
	this1.rule(Std.string(params4.event) + "",params4.src,params4.dst);
	var params5 = { event : "insert", src : "createError", dst : "insertData"};
	this1.rule(Std.string(params5.event) + "",params5.src,params5.dst);
	var params6 = { event : "eList", src : "insertData", dst : "list"};
	this1.rule(Std.string(params6.event) + "",params6.src,params6.dst);
	var params7 = { event : "insert", src : "create", dst : "created"};
	this1.rule(Std.string(params7.event) + "",params7.src,params7.dst);
	var params8 = { event : "goTolist", src : "created", dst : "list"};
	this1.rule(Std.string(params8.event) + "",params8.src,params8.dst);
	var params9 = { event : "update", src : "created", dst : "updateData"};
	this1.rule(Std.string(params9.event) + "",params9.src,params9.dst);
	var params10 = { event : "update", src : "updateData", dst : "validateUpdate"};
	this1.rule(Std.string(params10.event) + "",params10.src,params10.dst);
	var params11 = { event : "update", src : "validateUpdate", dst : "update"};
	this1.rule(Std.string(params11.event) + "",params11.src,params11.dst);
	var params12 = { event : "update", src : "update", dst : "updated"};
	this1.rule(Std.string(params12.event) + "",params12.src,params12.dst);
	var params13 = { event : "eError", src : "update", dst : "updateError"};
	this1.rule(Std.string(params13.event) + "",params13.src,params13.dst);
	var params14 = { event : "update", src : "updateError", dst : "updateData"};
	this1.rule(Std.string(params14.event) + "",params14.src,params14.dst);
	var params15 = { event : "eValidate", src : "validateUpdate", dst : "updateData"};
	this1.rule(Std.string(params15.event) + "",params15.src,params15.dst);
	var params16 = { event : "eList", src : "updateData", dst : "list"};
	this1.rule(Std.string(params16.event) + "",params16.src,params16.dst);
	var params17 = { event : "eDelete", src : "updateData", dst : "delete"};
	this1.rule(Std.string(params17.event) + "",params17.src,params17.dst);
	var params18 = { event : "goTolist", src : "updated", dst : "list"};
	this1.rule(Std.string(params18.event) + "",params18.src,params18.dst);
	var params19 = { event : "update", src : "updated", dst : "updateData"};
	this1.rule(Std.string(params19.event) + "",params19.src,params19.dst);
	var params20 = { event : "update", src : "list", dst : "updateData"};
	this1.rule(Std.string(params20.event) + "",params20.src,params20.dst);
	var params21 = { event : "eDelete", src : "list", dst : "delete"};
	this1.rule(Std.string(params21.event) + "",params21.src,params21.dst);
	var params22 = { event : "eDelete", src : "delete", dst : "deleted"};
	this1.rule(Std.string(params22.event) + "",params22.src,params22.dst);
	var params23 = { event : "goTolist", src : "deleted", dst : "list"};
	this1.rule(Std.string(params23.event) + "",params23.src,params23.dst);
	js_node_Fs.writeFileSync("myfile.dot",machine.export());
};
Math.__name__ = true;
var Std = function() { };
Std.__name__ = true;
Std.string = function(s) {
	return js_Boot.__string_rec(s,"");
};
var haxe_ds_StringMap = function() {
	this.h = { };
};
haxe_ds_StringMap.__name__ = true;
haxe_ds_StringMap.prototype = {
	setReserved: function(key,value) {
		if(this.rh == null) {
			this.rh = { };
		}
		this.rh["$" + key] = value;
	}
	,getReserved: function(key) {
		if(this.rh == null) {
			return null;
		} else {
			return this.rh["$" + key];
		}
	}
	,keys: function() {
		return HxOverrides.iter(this.arrayKeys());
	}
	,arrayKeys: function() {
		var out = [];
		for( var key in this.h ) {
		if(this.h.hasOwnProperty(key)) {
			out.push(key);
		}
		}
		if(this.rh != null) {
			for( var key in this.rh ) {
			if(key.charCodeAt(0) == 36) {
				out.push(key.substr(1));
			}
			}
		}
		return out;
	}
};
var haxe_io_Bytes = function() { };
haxe_io_Bytes.__name__ = true;
var js__$Boot_HaxeError = function(val) {
	Error.call(this);
	this.val = val;
	if(Error.captureStackTrace) {
		Error.captureStackTrace(this,js__$Boot_HaxeError);
	}
};
js__$Boot_HaxeError.__name__ = true;
js__$Boot_HaxeError.__super__ = Error;
js__$Boot_HaxeError.prototype = $extend(Error.prototype,{
});
var js_Boot = function() { };
js_Boot.__name__ = true;
js_Boot.__string_rec = function(o,s) {
	if(o == null) {
		return "null";
	}
	if(s.length >= 5) {
		return "<...>";
	}
	var t = typeof(o);
	if(t == "function" && (o.__name__ || o.__ename__)) {
		t = "object";
	}
	switch(t) {
	case "function":
		return "<function>";
	case "object":
		if(((o) instanceof Array)) {
			var str = "[";
			s += "\t";
			var _g3 = 0;
			var _g11 = o.length;
			while(_g3 < _g11) {
				var i = _g3++;
				str += (i > 0 ? "," : "") + js_Boot.__string_rec(o[i],s);
			}
			str += "]";
			return str;
		}
		var tostr;
		try {
			tostr = o.toString;
		} catch( e1 ) {
			var e2 = ((e1) instanceof js__$Boot_HaxeError) ? e1.val : e1;
			return "???";
		}
		if(tostr != null && tostr != Object.toString && typeof(tostr) == "function") {
			var s2 = o.toString();
			if(s2 != "[object Object]") {
				return s2;
			}
		}
		var str1 = "{\n";
		s += "\t";
		var hasp = o.hasOwnProperty != null;
		var k = null;
		for( k in o ) {
		if(hasp && !o.hasOwnProperty(k)) {
			continue;
		}
		if(k == "prototype" || k == "__class__" || k == "__super__" || k == "__interfaces__" || k == "__properties__") {
			continue;
		}
		if(str1.length != 2) {
			str1 += ", \n";
		}
		str1 += s + k + " : " + js_Boot.__string_rec(o[k],s);
		}
		s = s.substring(1);
		str1 += "\n" + s + "}";
		return str1;
	case "string":
		return o;
	default:
		return String(o);
	}
};
var js_node_Fs = require("fs");
String.__name__ = true;
Array.__name__ = true;
var __map_reserved = {};
Object.defineProperty(js__$Boot_HaxeError.prototype,"message",{ get : function() {
	return String(this.val);
}});
js_Boot.__toStr = ({ }).toString;
Main.main();
})({});
